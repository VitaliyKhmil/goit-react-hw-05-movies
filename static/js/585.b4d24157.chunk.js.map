{"version":3,"file":"static/js/585.b4d24157.chunk.js","mappings":"uMAGaA,EAAMC,IAAAA,OAAa,CAC9BC,QAASC,EAAAA,GACTC,OAAQ,CACNC,QAASC,EAAAA,K,wGCNN,IAAMH,EAAW,+BACXG,EAAU,mCAEVC,EAAe,4B,kKCIfC,EAAa,mCAAG,WAAMC,GAAN,kGAEFT,EAAAA,EAAAA,IAAQ,gBAAiB,CAAEI,OAAQK,IAFjC,uBAEjBC,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,gCAKzBC,EAAAA,GAAAA,EAAA,6CALyB,yDAAH,sD,uCCLbC,EAAUC,EAAAA,GAAAA,GAAH,4GAOPC,EAAcD,EAAAA,GAAAA,GAAH,oXAgBXE,EAAoBF,EAAAA,GAAAA,IAAH,kGAOjBG,EAAWH,EAAAA,GAAAA,GAAH,gE,SCtBRI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,SAAAC,GACV,OACE,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,WACI,SAACJ,EAAD,CACEY,IAAKpB,EAAAA,GAAe,QAAUe,EAAMM,YACpCC,IAAI,MAGR,SAACb,EAAD,UAAWM,EAAMQ,YAPHR,EAAME,GAW3B,KAGN,E,4BC5BYO,GAAalB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,kTAaVoB,GAAkBpB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAH,0RAiBfsB,EAAmBtB,EAAAA,GAAAA,OAAH,wRCzBhBuB,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,SAAC,KAAD,CACEC,cAAe,CAAE9B,MAAK,OAAE6B,QAAF,IAAEA,EAAAA,EAAS,IACjCD,SAAU,SAAAG,GACRH,EAASG,EACV,EAJH,UAME,UAACT,EAAD,YACE,SAACI,EAAD,CAAkBM,KAAK,SAAvB,UACE,SAAC,MAAD,CAAUC,KAAK,YAGjB,SAACT,EAAD,CACEU,KAAK,QACLF,KAAK,OACLG,WAAS,EACTC,YAAY,qBAKrB,E,mBCqBD,EA3Ce,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FAEmB,MADbC,EADN,UACiBN,EAAaO,IAAI,eADlC,QAC6C,IAD7C,iEAK8B9C,EAAc,CACtCC,MAAO4C,EACPE,KAAM,IAPZ,gBAKYC,EALZ,EAKYA,QAIRL,EAAgBK,GATpB,6CADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACV,IAYJ,OACE,UAACW,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,SACdC,eAAe,SACfC,WAAW,SAJb,WAME,SAAC1B,EAAD,CAAWC,SAjBO,SAAAC,GACpB,GAA2B,KAAvBA,EAAM7B,MAAMsD,OAAhB,CAIE,IAAMC,EAA6B,KAAhB1B,EAAM7B,MAAe,CAAEkC,KAAML,EAAM7B,OAAU,CAAC,EACjEuC,EAAgBgB,EACjB,MALCC,IAAAA,OAAAA,QAAwB,yBAM3B,EASuC3B,MAAOS,EAAaO,IAAI,WAC5D,SAACrC,EAAD,CAAYC,OAAQgC,MAGzB,C","sources":["api/apiAxios.js","constants/apiConstants.js","api/getFilmsByKey.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from '../constants/apiConstants.js';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'cdbf15650442f13f9645e14e807ed3ed';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p';","import { api } from './apiAxios';\nimport { toast } from 'react-toastify';\n\nexport const params = {\n  page: 1,\n};\n\nexport const getFilmsByKey = async query => {\n  try {\n    const { data } = await api.get('/search/movie', { params: query });\n    return data;\n  } catch (e) {\n    toast.e(`Sorry, something went wrong ${e}`);\n  }\n};\n","import styled from 'styled-components';\n\nexport const MovList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: -10px;\n`;\n\nexport const MovListItem = styled.li`\n  width: 240px;\n  margin: 10px;\n  margin-top: 35px;\n  text-decoration: none;\n  border-radius: 12px;\n  background-color: #fff;\n  box-shadow: 9px 9px 16px rgba(163, 177, 198, 0.6),\n    -9px -9px 16px rgba(255, 255, 255, 0.5);\n  overflow: hidden;\n  transition: transform 250ms ease-in-out;\n  :hover {\n    transform: translateY(-5px);\n  }\n`;\n\nexport const MovListItemPoster = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const MovTitle = styled.h3`\n  text-align: center;\n  color: black;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'constants/apiConstants.js';\nimport PropTypes from 'prop-types';\nimport {\n  MovList,\n  MovListItem,\n  MovListItemPoster,\n  MovTitle,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovList>\n      {movies.map(movie => {\n        return (\n          <MovListItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              { <MovListItemPoster\n                  src={BASE_IMG_URL + '/w300' + movie.poster_path}\n                  alt=\"\"\n                />\n              }\n              <MovTitle>{movie.title}</MovTitle>\n            </Link>\n          </MovListItem>\n        );\n      })}\n    </MovList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 400px;\n  margin: 0 auto;\n  background-color: #fff;\n  border-radius: 15px;\n  overflow: hidden;\n  box-shadow: 9px 9px 12px rgba(163, 177, 198, 0.6),\n    -9px -9px 12px rgba(255, 255, 255, 0.5);\n`;\n\nexport const SearchFormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  font: inherit;\n  font-size: 1em;\n  border: none;\n  outline: none;\n  padding-left: 0 avto;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 1em;\n  }\n`;\n\nexport const SearchFormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n  border: none;\n  color: orange;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    color: violet;\n  }\n\n`;\n","import { Formik } from 'formik';\nimport { ImSearch } from 'react-icons/im';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit, value }) => {\n  return (\n    <Formik\n      initialValues={{ query: value ?? '' }}\n      onSubmit={values => {\n        onSubmit(values);\n      }}\n    >\n      <SearchForm>\n        <SearchFormButton type=\"submit\">\n          <ImSearch size=\"40px\" />\n        </SearchFormButton>\n\n        <SearchFormInput\n          name=\"query\"\n          type=\"text\"\n          autoFocus\n          placeholder=\"Movie search\"\n        />\n      </SearchForm>\n    </Formik>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmsByKey } from 'api/getFilmsByKey';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Box } from 'components/ui/Box';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchResult, setSearchResult] = useState([]);\n\n  useEffect(() => {\n    async function onKeyWord() {\n      let filmName = searchParams.get('name') ?? '';\n      if (filmName === '') {\n        return;\n      } else {\n        const { results } = await getFilmsByKey({\n          query: filmName,\n          page: 1,\n        });\n        setSearchResult(results);\n      }\n    }\n    onKeyWord();\n  }, [searchParams]);\n\n  const handlerSubmit = value => {\n    if (value.query.trim() === '') {\n      Notiflix.Notify.failure('Please entry something');\n      return;\n    } else {\n      const nextParams = value.query !== '' ? { name: value.query } : {};\n      setSearchParams(nextParams);\n    }\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Searchbar onSubmit={handlerSubmit} value={searchParams.get('name')} />\n      <MoviesList movies={searchResult} />\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["api","axios","baseURL","BASE_URL","params","api_key","API_KEY","BASE_IMG_URL","getFilmsByKey","query","data","toast","MovList","styled","MovListItem","MovListItemPoster","MovTitle","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","SearchForm","Form","SearchFormInput","Field","SearchFormButton","Searchbar","onSubmit","value","initialValues","values","type","size","name","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","useState","searchResult","setSearchResult","useEffect","filmName","get","page","results","onKeyWord","Box","display","flexDirection","justifyContent","alignItems","trim","nextParams","Notiflix"],"sourceRoot":""}