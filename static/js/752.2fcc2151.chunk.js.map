{"version":3,"file":"static/js/752.2fcc2151.chunk.js","mappings":"uMAGaA,EAAMC,IAAAA,OAAa,CAC9BC,QAASC,EAAAA,GACTC,OAAQ,CACNC,QAASC,EAAAA,K,wGCNN,IAAMH,EAAW,+BACXG,EAAU,mCAEVC,EAAe,4B,sKCDfC,EAAiBC,EAAAA,GAAAA,GAAH,oIAQdC,EAAeD,EAAAA,GAAAA,GAAH,wJASZE,EAAiBF,EAAAA,GAAAA,IAAH,uGAOdG,EAAeH,EAAAA,GAAAA,EAAH,sG,SCnBZI,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACE,0BACE,SAACN,EAAD,UACGM,EAAQC,KAAI,SAAAC,GACX,OACE,UAACN,EAAD,YAEI,SAACC,EAAD,CACEM,IAAKV,EAAAA,GAAe,QAAUS,EAAOE,aACrCC,IAAI,MAGR,SAACP,EAAD,UAAeI,EAAOI,SAPLJ,EAAOK,UAU7B,OAIR,E,mBCxBYC,EAAW,mCAAG,WAAMC,GAAN,gGAEAvB,EAAAA,EAAAA,IAAA,iBAAkBuB,EAAlB,aAFA,cAEjBC,EAFiB,yBAGhBA,GAHgB,gCAKvBC,EAAAA,GAAAA,EAAA,6CALuB,yDAAH,sDCmBxB,EAjBa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAGYT,EAAYO,GAHxB,gBAEYG,EAFZ,EAEIC,KAAQD,KAEVJ,EAASI,GAJX,4CADc,uBAAC,WAAD,wBAOdE,EACD,GAAE,CAACL,KAEG,8BAAGF,IAAS,SAACd,EAAD,CAAUC,QAASa,KACvC,C","sources":["api/apiAxios.js","constants/apiConstants.js","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","api/getFilmCast.js","pages/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from '../constants/apiConstants.js';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'cdbf15650442f13f9645e14e807ed3ed';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p';","import styled from 'styled-components';\n\nexport const CastListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  justify-content: center;\n  margin: -5px;\n`;\n\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: baseline;\n  max-width: 80px;\n  margin: 4px;\n  flex-grow: 1;\n`;\n\nexport const CastListPoster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  margin-bottom: 8px;\n`;\n\nexport const CastListName = styled.p`\n  display: block;\n  text-align: center;\n  font-size: 12px;\n  color: gray;\n`;\n","import { BASE_IMG_URL } from '../../constants/apiConstants';\nimport {\n  CastListStyled,\n  CastListItem,\n  CastListPoster,\n  CastListName,\n} from './CastList.styled';\nexport const CastList = ({ credits }) => {\n  return (\n    <div>\n      <CastListStyled>\n        {credits.map(credit => {\n          return (\n            <CastListItem key={credit.credit_id}>\n              {\n                <CastListPoster\n                  src={BASE_IMG_URL + '/w500' + credit.profile_path}\n                  alt=\"\"\n                />}\n\n              <CastListName>{credit.name}</CastListName>\n            </CastListItem>\n          );\n        })}\n      </CastListStyled>\n    </div>\n  );\n};\n","import { api } from './apiAxios';\nimport { toast } from 'react-toastify';\n\nexport const getFilmCast = async id => {\n  try {\n    const response = await api.get(`/movie/${id}/credits`);\n    return response;\n  } catch (e) {\n    toast.e(`Sorry, something went wrong ${e}`);\n  }\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { CastList } from '../../../components/CastList/CastList';\nimport { getFilmCast } from 'api/getFilmCast';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function onFilmCast() {\n      const {\n        data: { cast },\n      } = await getFilmCast(movieId);\n      setCasts(cast);\n    }\n    onFilmCast();\n  }, [movieId]);\n\n  return <>{casts && <CastList credits={casts} />}</>;\n};\n\nexport default Cast;\n"],"names":["api","axios","baseURL","BASE_URL","params","api_key","API_KEY","BASE_IMG_URL","CastListStyled","styled","CastListItem","CastListPoster","CastListName","CastList","credits","map","credit","src","profile_path","alt","name","credit_id","getFilmCast","id","response","toast","useState","casts","setCasts","movieId","useParams","useEffect","cast","data","onFilmCast"],"sourceRoot":""}